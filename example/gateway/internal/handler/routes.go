// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	goods "2106A-zg6/gateway/internal/handler/goods"
	order "2106A-zg6/gateway/internal/handler/order"
	usercenter "2106A-zg6/gateway/internal/handler/usercenter"
	"2106A-zg6/gateway/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AgentMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/register",
					Handler: usercenter.RegisterHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AgentMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/good/add",
					Handler: goods.AddGoodHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/good/update",
					Handler: goods.UpdateGoodHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/good/get",
					Handler: goods.GetGoodHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/good/delete",
					Handler: goods.DeleteGoodHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/good/find",
					Handler: goods.FindGoodsHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/good/search",
					Handler: goods.SearchGoodsHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AgentMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/order/create",
					Handler: order.CreateOrderHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/update",
					Handler: order.UpdateOrderStatusHandler(serverCtx),
				},
			}...,
		),
	)
}
