// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package usercenterservice

import (
	"context"

	"2106A-zg6/srv/usercenter/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateReq = pb.CreateReq
	DeleteReq = pb.DeleteReq
	Empty     = pb.Empty
	GetReq    = pb.GetReq
	GetResp   = pb.GetResp
	UpdateReq = pb.UpdateReq
	User      = pb.User

	UserCenterService interface {
		Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*Empty, error)
		Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*Empty, error)
		Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error)
		Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultUserCenterService struct {
		cli zrpc.Client
	}
)

func NewUserCenterService(cli zrpc.Client) UserCenterService {
	return &defaultUserCenterService{
		cli: cli,
	}
}

func (m *defaultUserCenterService) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewUserCenterServiceClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultUserCenterService) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewUserCenterServiceClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultUserCenterService) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error) {
	client := pb.NewUserCenterServiceClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultUserCenterService) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewUserCenterServiceClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}
