// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package orderservice

import (
	"context"

	"2106A-zg6/srv/order/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateReq           = pb.CreateReq
	OrderEmpty          = pb.OrderEmpty
	UpdateOrderStateReq = pb.UpdateOrderStateReq

	OrderService interface {
		Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*OrderEmpty, error)
		CreateBack(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*OrderEmpty, error)
		UpdateOrderState(ctx context.Context, in *UpdateOrderStateReq, opts ...grpc.CallOption) (*OrderEmpty, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

func (m *defaultOrderService) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*OrderEmpty, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultOrderService) CreateBack(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*OrderEmpty, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.CreateBack(ctx, in, opts...)
}

func (m *defaultOrderService) UpdateOrderState(ctx context.Context, in *UpdateOrderStateReq, opts ...grpc.CallOption) (*OrderEmpty, error) {
	client := pb.NewOrderServiceClient(m.cli.Conn())
	return client.UpdateOrderState(ctx, in, opts...)
}
